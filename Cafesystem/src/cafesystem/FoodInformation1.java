/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package cafesystem;

import java.sql.Connection;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Nathan
 */
public class FoodInformation1 extends javax.swing.JInternalFrame {

    /**
     * Creates new form FoodInformation1
     */
    public FoodInformation1() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblfoodList = new javax.swing.JTable();
        btnRefresh = new javax.swing.JButton();
        btnNew = new javax.swing.JButton();
        btnDelate = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setTitle("                                                         Food List ");
        addInternalFrameListener(new javax.swing.event.InternalFrameListener() {
            public void internalFrameActivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosed(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameClosing(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeactivated(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameDeiconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameIconified(javax.swing.event.InternalFrameEvent evt) {
            }
            public void internalFrameOpened(javax.swing.event.InternalFrameEvent evt) {
                formInternalFrameOpened(evt);
            }
        });

        tblfoodList.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "", javax.swing.border.TitledBorder.CENTER, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Tahoma", 0, 11), new java.awt.Color(51, 51, 255))); // NOI18N
        tblfoodList.setForeground(new java.awt.Color(0, 0, 255));
        tblfoodList.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Food_ID", "FoodName", "FoodMeasure", "FoodAmount"
            }
        ));
        jScrollPane1.setViewportView(tblfoodList);

        btnRefresh.setBackground(new java.awt.Color(255, 255, 255));
        btnRefresh.setFont(new java.awt.Font("Tahoma", 3, 18)); // NOI18N
        btnRefresh.setForeground(new java.awt.Color(102, 0, 255));
        btnRefresh.setText("Refresh");
        btnRefresh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefreshActionPerformed(evt);
            }
        });

        btnNew.setFont(new java.awt.Font("Noto Sans", 3, 18)); // NOI18N
        btnNew.setForeground(new java.awt.Color(102, 0, 255));
        btnNew.setText("New");
        btnNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNewActionPerformed(evt);
            }
        });

        btnDelate.setFont(new java.awt.Font("Noto Sans", 3, 18)); // NOI18N
        btnDelate.setForeground(new java.awt.Color(102, 0, 255));
        btnDelate.setText("Delete");
        btnDelate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelateActionPerformed(evt);
            }
        });

        btnUpdate.setFont(new java.awt.Font("Noto Sans", 3, 18)); // NOI18N
        btnUpdate.setForeground(new java.awt.Color(102, 0, 255));
        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 653, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(btnNew)
                .addGap(18, 18, 18)
                .addComponent(btnDelate)
                .addGap(18, 18, 18)
                .addComponent(btnUpdate)
                .addGap(18, 18, 18)
                .addComponent(btnRefresh))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 219, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnNew, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnDelate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(btnUpdate, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(btnRefresh, javax.swing.GroupLayout.PREFERRED_SIZE, 19, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnRefreshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefreshActionPerformed
        // TODO add your handling code here:
        readfood();
    }//GEN-LAST:event_btnRefreshActionPerformed

    private void btnNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNewActionPerformed
        // TODO add your handling code here:
        insertFood();
    }//GEN-LAST:event_btnNewActionPerformed

    private void btnDelateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelateActionPerformed
        // TODO add your handling code here:
        deleteFood();
    }//GEN-LAST:event_btnDelateActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        updateFood();
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void formInternalFrameOpened(javax.swing.event.InternalFrameEvent evt) {//GEN-FIRST:event_formInternalFrameOpened
        if (UserInfo.role == 1) {
            btnNew.setEnabled(false);
        }
    }//GEN-LAST:event_formInternalFrameOpened


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelate;
    private javax.swing.JButton btnNew;
    private javax.swing.JButton btnRefresh;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblfoodList;
    // End of variables declaration//GEN-END:variables
    Connection conn = null;
    Statement stmt = null;
    ResultSet rst = null;

    private void readfood() {

        DefaultTableModel FoodTblModel = (DefaultTableModel) tblfoodList.getModel();
        FoodTblModel.setRowCount(0);
        String sql = "Select * From food order by Food_Name ASC";
        try {
            conn = ConnectToDB.getConnected();
            stmt = conn.createStatement(ResultSet.TYPE_SCROLL_SENSITIVE, ResultSet.CONCUR_UPDATABLE);
            rst = stmt.executeQuery(sql);
            int row = 0;
            while (rst.next()) {
                FoodTblModel.addRow(new Object[]{rst.getInt("Food_ID"), rst.getString("Food_Name"), rst.getString("Food_Measure"), rst.getString("Food_Amount")});
            }

        } catch (SQLException e) {
            JOptionPane.showMessageDialog(this, "Database server error" + e.getMessage());
        }
    }
    

    private void insertFood() {
        DefaultTableModel facultyTblModel = (DefaultTableModel) tblfoodList.getModel();
        if (btnNew.getText().equalsIgnoreCase("New")) {
            int emptrow = facultyTblModel.getRowCount() + 1;
            facultyTblModel.setRowCount(emptrow);
            btnNew.setText("Save");
        } else {
            int newrow = facultyTblModel.getRowCount() - 1;
            try {

                rst.moveToInsertRow();

                rst.updateString("Food_ID", facultyTblModel.getValueAt(newrow, 0).toString());
                rst.updateString("Food_Name", facultyTblModel.getValueAt(newrow, 1).toString());
                rst.updateString("Food_Measure", facultyTblModel.getValueAt(newrow, 2).toString());
                rst.updateString("Food_Amount", facultyTblModel.getValueAt(newrow, 3).toString());
                rst.insertRow();
                rst.moveToCurrentRow();
                JOptionPane.showMessageDialog(this, "Record saved successfully.");
                btnNew.setText("New");
            } catch (Exception e) {
                JOptionPane.showMessageDialog(this, "Database server error" + e.getMessage());
            }
        }
    }

    private void updateFood() {
        DefaultTableModel facultyTblModel = (DefaultTableModel) tblfoodList.getModel();
        try {
            int resp = JOptionPane.showConfirmDialog(this, "Are you sure you want to update the selected record?");
            if (resp == JOptionPane.YES_OPTION) {
                int row = tblfoodList.getSelectedRow() + 1;
                rst.absolute(row);
                rst.updateString("Food_ID", facultyTblModel.getValueAt(tblfoodList.getSelectedRow(), 0).toString());
                rst.updateString("Food_Name", facultyTblModel.getValueAt(tblfoodList.getSelectedRow(), 1).toString());
                rst.updateString("Food_Measure", facultyTblModel.getValueAt(tblfoodList.getSelectedRow(), 2).toString());
                rst.updateString("Food_Amount", facultyTblModel.getValueAt(tblfoodList.getSelectedRow(), 3).toString());
                rst.updateRow();
                JOptionPane.showMessageDialog(this, "Record updated successfully.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Database server error" + e.getMessage());
        }
    }

    private void deleteFood() {
        try {
            int resp = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete the selected record?");
            if (resp == JOptionPane.YES_OPTION) {
                int row = tblfoodList.getSelectedRow() + 1;
                rst.absolute(row);
                rst.deleteRow();
                JOptionPane.showMessageDialog(this, "Record deleted successfully.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Database server error" + e.getMessage());
        }
    }

}
